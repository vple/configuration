#!/bin/sh

link_file () {
  local src=$1 dst=$2

  local overwrite= backup= skip=
  local action=

  if [ -f "$dst" -o -d "$dst" -o -L "$dst" ]
  then

    # Currently not used/settable, so this is true.
    # if [[ "$overwrite_all" == "false" ]] && [[ "$backup_all" == "false" ]] && [[ "$skip_all" == "false" ]]
    # then

      local currentSrc="$(readlink $dst)"

      if [[ "$currentSrc" == "$src" ]]
      then

        skip=true;

      else
        log "$dst already exists! Symlink failed."
        return 1

        # # This is copy-pasta'd, it won't work yet.
        # user "File already exists: $dst ($(basename "$src")), what do you want to do?\n\
        # [s]kip, [S]kip all, [o]verwrite, [O]verwrite all, [b]ackup, [B]ackup all?"
        # read -n 1 action
        #
        # case "$action" in
        #   o )
        #     overwrite=true;;
        #   O )
        #     overwrite_all=true;;
        #   b )
        #     backup=true;;
        #   B )
        #     backup_all=true;;
        #   s )
        #     skip=true;;
        #   S )
        #     skip_all=true;;
        #   * )
        #     ;;
        # esac

      fi

    # fi

    overwrite=${overwrite:-$overwrite_all}
    backup=${backup:-$backup_all}
    skip=${skip:-$skip_all}

    if [[ "$overwrite" == "true" ]]
    then
      rm -rf "$dst"
      log "Removed $dst"
    fi

    if [[ "$backup" == "true" ]]
    then
      mv "$dst" "${dst}.backup"
      log "Moved $dst to ${dst}.backup"
    fi

    if [[ "$skip" == "true" ]]
    then
      log "Skipped $src"
    fi
  fi

  if [[ "$skip" != "true" ]]  # "false" or empty
  then
    ln -s "$1" "$2"
    log "Linked $1 to $2"
  fi
}
